FROM composer:latest AS composer

FROM node:18-slim AS node_builder

WORKDIR /build

# 构建静态文件
COPY . .

RUN npm --registry https://registry.npmmirror.com install --prefix ./static/vitepress/ && \
    npm --prefix ./static/vitepress/ run docs:build && \
    npm --registry https://registry.npmmirror.com install --prefix ./static/management/ && \
    npm --prefix ./static/management run build:modules
RUN find . -type d -name "node_modules" -prune -exec rm -rf {} +

# 构建go服务端
FROM golang:1.23-bookworm AS go_builder
WORKDIR /build
COPY go.mod Makefile ./
COPY golang ./golang/
RUN apt-get update && apt-get install -y --no-install-recommends make
RUN go env -w GOPROXY=https://goproxy.cn,direct && make app && make master

# 构建最终镜像
FROM php:8.2.26-cli-bookworm

# 安装常用扩展
RUN apt-get update && apt-get install -y --no-install-recommends \
   procps vim tzdata make unzip libpq-dev libzip-dev libpng-dev libmagickwand-dev zlib1g-dev \
   && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
   && dpkg-reconfigure -f noninteractive tzdata \
   && docker-php-ext-install pdo_pgsql bcmath gd zip sockets \
   && pecl install imagick igbinary msgpack\
   && docker-php-ext-enable imagick igbinary msgpack \
   && apt-get clean \
   && rm -rf /var/lib/apt/lists/* \
   && rm -rf /tmp/pear \
   && docker-php-source delete

# 安装composer
COPY --from=composer /usr/bin/composer /usr/bin/composer

# minio客户端
COPY docker/main/mc /usr/local/bin/mc
RUN chmod +x /usr/local/bin/mc

# 添加自定义加密扩展
COPY docker/main/edl.so /usr/local/lib/php/extensions/no-debug-non-zts-20220829/
RUN docker-php-ext-enable edl

# 复制前端代码和php代码
COPY --from=node_builder /build/ /var/www/
WORKDIR /var/www/

# 复制编译好的golang二进制文件
COPY --from=go_builder /build/golang /var/www/golang

# 安装php依赖
COPY php/composer.lock php/composer.lock
RUN COMPOSER_ALLOW_SUPERUSER=1 composer --working-dir php install --no-dev

# 复制环境变量文件
COPY .env.prod .env

# 权限
RUN chmod -R 777 php/runtime

# 运行
ENV LD_LIBRARY_PATH=/var/www/golang/plugins/wxfinance/linux
RUN chmod +x /var/www/golang/build/master
CMD ["/var/www/golang/build/master"]
